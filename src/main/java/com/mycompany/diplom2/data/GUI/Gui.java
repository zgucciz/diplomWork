/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.diplom2.data.GUI;

import com.mycompany.diplom2.data.DataService;
import com.mycompany.diplom2.data.InputMethods;
import com.mycompany.diplom2.data.InputSubmethods;
import com.mycompany.diplom2.data.ResearchObject;
import com.mycompany.diplom2.data.SubobjectOfResearch;
import java.sql.SQLException;


/**
 *
 * @author 1
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() throws SQLException {
        initComponents();
        initObjectCombobox();
        initMethodCombobox();
        confirmButtonDoNotActive();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        win1Panel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        objectsBox = new javax.swing.JComboBox();
        subobjectsBox = new javax.swing.JComboBox();
        methodsBox = new javax.swing.JComboBox();
        submethodsBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        confirmButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        examplesOfObjects = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        examplesOfMethods = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        win1Panel.setMinimumSize(new java.awt.Dimension(382, 300));
        java.awt.GridBagLayout win1PanelLayout = new java.awt.GridBagLayout();
        win1PanelLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        win1PanelLayout.rowHeights = new int[] {0, 5, 0, 5, 0};
        win1Panel.setLayout(win1PanelLayout);

        leftPanel.setLayout(new java.awt.GridBagLayout());

        objectsBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        objectsBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Выбрать>" }));
        objectsBox.setMaximumSize(null);
        objectsBox.setMinimumSize(new java.awt.Dimension(30, 28));
        objectsBox.setName(""); // NOI18N
        objectsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objectsBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(objectsBox, gridBagConstraints);

        subobjectsBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subobjectsBox.setMaximumRowCount(20);
        subobjectsBox.setToolTipText("Объект не выбран!");
        subobjectsBox.setEnabled(false);
        subobjectsBox.setMaximumSize(null);
        subobjectsBox.setMinimumSize(new java.awt.Dimension(30, 28));
        subobjectsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subobjectsBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(subobjectsBox, gridBagConstraints);

        methodsBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        methodsBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Выбрать>" }));
        methodsBox.setMaximumSize(null);
        methodsBox.setMinimumSize(new java.awt.Dimension(30, 28));
        methodsBox.setName("methods"); // NOI18N
        methodsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                methodsBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(methodsBox, gridBagConstraints);

        submethodsBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        submethodsBox.setToolTipText("Метод не выбран!");
        submethodsBox.setEnabled(false);
        submethodsBox.setMaximumSize(null);
        submethodsBox.setMinimumSize(new java.awt.Dimension(30, 28));
        submethodsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submethodsBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(submethodsBox, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Объект исследования:");
        jLabel1.setMaximumSize(null);
        jLabel1.setMinimumSize(new java.awt.Dimension(30, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Вид объекта:");
        jLabel2.setMaximumSize(null);
        jLabel2.setMinimumSize(new java.awt.Dimension(30, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Способ ввода пробы:");
        jLabel3.setMaximumSize(null);
        jLabel3.setMinimumSize(new java.awt.Dimension(30, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Вид способа ввода пробы:");
        jLabel4.setToolTipText("");
        jLabel4.setMinimumSize(new java.awt.Dimension(30, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        win1Panel.add(leftPanel, gridBagConstraints);

        rightPanel.setMinimumSize(new java.awt.Dimension(100, 200));
        rightPanel.setPreferredSize(new java.awt.Dimension(200, 100));
        java.awt.GridBagLayout rightPanelLayout = new java.awt.GridBagLayout();
        rightPanelLayout.columnWidths = new int[] {0, 5, 0};
        rightPanelLayout.rowHeights = new int[] {0, 5, 0, 5, 0};
        rightPanel.setLayout(rightPanelLayout);

        confirmButton.setBackground(new java.awt.Color(102, 255, 102));
        confirmButton.setFont(new java.awt.Font("Sylfaen", 2, 18)); // NOI18N
        confirmButton.setForeground(new java.awt.Color(51, 51, 51));
        confirmButton.setText("Подтвердить");
        confirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 219;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        rightPanel.add(confirmButton, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(226, 50));

        examplesOfObjects.setEditable(false);
        examplesOfObjects.setColumns(20);
        examplesOfObjects.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        examplesOfObjects.setLineWrap(true);
        examplesOfObjects.setRows(5);
        jScrollPane1.setViewportView(examplesOfObjects);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        rightPanel.add(jScrollPane1, gridBagConstraints);

        examplesOfMethods.setEditable(false);
        examplesOfMethods.setColumns(20);
        examplesOfMethods.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        examplesOfMethods.setLineWrap(true);
        examplesOfMethods.setRows(5);
        jScrollPane2.setViewportView(examplesOfMethods);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        rightPanel.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        win1Panel.add(rightPanel, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(win1Panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(win1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void objectsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objectsBoxActionPerformed
        // TODO add your handling code here:
        if(!objectsBox.getSelectedItem().equals(ResearchObject.NONE_SELECTED)){
            ResearchObject selected =(ResearchObject) objectsBox.getSelectedItem();
            CustomListModel model = new CustomListModel(selected.getSubobjectsAsArray());
            subobjectsBox.setModel(model);
            ((CustomListModel) subobjectsBox.getModel()).setSelectedItem(SubobjectOfResearch.NONE_SELECTED);
            subobjectsBox.setEnabled(true);
            subobjectsBox.setToolTipText(null);
        }
    }//GEN-LAST:event_objectsBoxActionPerformed

    private void methodsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_methodsBoxActionPerformed
        // TODO add your handling code here:
        InputMethods selectedMethod =(InputMethods) methodsBox.getSelectedItem();
        if (!selectedMethod.equals(InputMethods.NONE_SELECTED)) 
            if (selectedMethod.getSubmethods().isEmpty()) {
                submethodsBox.setEnabled(false);
                submethodsBox.setToolTipText(null);
//                submethodsBox.removeAllItems();                               так почему-то не работает
//                submethodsBox.addItem(InputSubmethods.NONE_SELECTED);
                InputSubmethods[] firstInit = {InputSubmethods.NONE_SELECTED};
                submethodsBox.setModel(new CustomListModel(firstInit));
                examplesOfMethods.setText(null);                                //вот так работает норм
                
                if (!subobjectsBox.getSelectedItem().equals(SubobjectOfResearch.NONE_SELECTED))
                    confirmButtonDoActive();                
            } else {
                
                CustomListModel model = new CustomListModel(selectedMethod.getSubmethodsAsArray());
                submethodsBox.setModel(model);
                ((CustomListModel) submethodsBox.getModel()).setSelectedItem(InputSubmethods.NONE_SELECTED);
                submethodsBox.setEnabled(true);
                submethodsBox.setToolTipText(null);
            }
    }//GEN-LAST:event_methodsBoxActionPerformed

    private void subobjectsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subobjectsBoxActionPerformed
        // TODO add your handling code here:
        if (subobjectsBox.getSelectedItem().equals(SubobjectOfResearch.NONE_SELECTED)) {
            confirmButtonDoNotActive();
            examplesOfObjects.setText(null);
        } else {
            if(!methodsBox.getSelectedItem().equals(InputMethods.NONE_SELECTED))
                if ((!submethodsBox.getSelectedItem().equals(InputSubmethods.NONE_SELECTED)) || ((InputMethods)methodsBox.getSelectedItem()).getSubmethods().isEmpty()) {
                    confirmButtonDoActive();
                };
            examplesOfObjects.setText(((SubobjectOfResearch)((CustomListModel)subobjectsBox.getModel()).getSelectedItem()).getExamples());
        }
    }//GEN-LAST:event_subobjectsBoxActionPerformed

    private void submethodsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submethodsBoxActionPerformed
        // TODO add your handling code here:
        if (submethodsBox.getSelectedItem().equals(InputSubmethods.NONE_SELECTED)) {
            confirmButtonDoNotActive();
            examplesOfMethods.setText(null);
        } else {
            if (!subobjectsBox.getSelectedItem().equals(SubobjectOfResearch.NONE_SELECTED)) 
                 confirmButtonDoActive();
            examplesOfMethods.setText(((InputSubmethods)((CustomListModel)submethodsBox.getModel()).getSelectedItem()).getExamples());
        }
    }//GEN-LAST:event_submethodsBoxActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:
        ChooseSetOfSensors.run();
        this.setVisible(false);

 
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void initObjectCombobox() throws SQLException {
        DataService<ResearchObject> ds = new DataService(ResearchObject.class);
        CustomListModel model = new CustomListModel(ds.getAllAsArray());
        objectsBox.setModel(model);
        ((CustomListModel) objectsBox.getModel()).setSelectedItem(ResearchObject.NONE_SELECTED);
        
        SubobjectOfResearch[] firstInit = {SubobjectOfResearch.NONE_SELECTED};
        subobjectsBox.setModel(new CustomListModel(firstInit));
    }

    private void initMethodCombobox() throws SQLException {
        DataService<InputMethods> ds = new DataService(InputMethods.class);
        CustomListModel model = new CustomListModel(ds.getAllAsArray());
        methodsBox.setModel(model);
        ((CustomListModel) methodsBox.getModel()).setSelectedItem(InputMethods.NONE_SELECTED);

        InputSubmethods[] firstInit = {InputSubmethods.NONE_SELECTED};
        submethodsBox.setModel(new CustomListModel(firstInit)); 
    }
    
    private void confirmButtonDoNotActive(){
        confirmButton.setEnabled(false);
        confirmButton.setBackground(new java.awt.Color(255, 153, 153));
    }
    
    private void confirmButtonDoActive(){
        confirmButton.setEnabled(true);
        confirmButton.setBackground(new java.awt.Color(102, 255, 102));
    }

    public static void run() throws SQLException {
        Gui form = new Gui();
        form.setVisible(true);
        form.setLocationRelativeTo(null);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmButton;
    private javax.swing.JTextArea examplesOfMethods;
    private javax.swing.JTextArea examplesOfObjects;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JComboBox methodsBox;
    private javax.swing.JComboBox objectsBox;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JComboBox submethodsBox;
    private javax.swing.JComboBox subobjectsBox;
    private javax.swing.JPanel win1Panel;
    // End of variables declaration//GEN-END:variables
}
